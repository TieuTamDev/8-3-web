// Hi·ªÉn th·ªã alert khi trang t·∫£i v√† ch·ªù ng∆∞·ªùi d√πng x√°c nh·∫≠n
document.addEventListener('DOMContentLoaded', function() {
    alert("Sau khi OK th√¨ h√£y click b·∫•t k·ª≥ ch·ªó n√†o tr√™n trang ƒë·ªÉ nh·∫°c m·ªü nh√©! C√≥ th·ªÉ ch·ªçn nh·∫°c ·ªü ch·ªó üéµ n√†y nh√©! ");
    var audio = document.getElementById('background-music');
    if (audio) {
        audio.volume = 0.2; // ƒê·∫∑t √¢m l∆∞·ª£ng ban ƒë·∫ßu l√† 20% (thay v√¨ 50% trong startPage ƒë·ªÉ nh·∫•t qu√°n)
    }
    if (audio) {
        setupAutoPlayNext(audio);
    }
    startPage(); // Kh·ªüi ƒë·ªông trang sau khi ng∆∞·ªùi d√πng nh·∫•p OK tr√™n alert
});

document.addEventListener('click', function playMusicOnce() {
    var audio = document.getElementById('background-music');

    if (audio && audio.paused) {
        audio.play().then(() => {
            console.log("Nh·∫°c b·∫Øt ƒë·∫ßu ph√°t");
            document.removeEventListener("click", playMusicOnce);
        }).catch(error => {
            console.log("Kh√¥ng th·ªÉ ph√°t nh·∫°c: ", error);
        });
    }
});

function startPage() {
    var audio = document.getElementById('background-music');
    var body = document.body;
    var volumeSlider = document.getElementById('volume-slider');
    var volumeIcon = document.querySelector('.volume-icon');

    if (audio) {
        setupAutoPlayNext(audio);
    }
    
    if (audio && body) {
        audio.volume = 0.2; // ƒê·∫∑t √¢m l∆∞·ª£ng ban ƒë·∫ßu l√† 20% (thay v√¨ 50% ƒë·ªÉ nh·∫•t qu√°n v·ªõi DOMContentLoaded)
        audio.play().then(() => {
            console.log("Nh·∫°c b·∫Øt ƒë·∫ßu ph√°t v√† trang ƒë∆∞·ª£c k√≠ch ho·∫°t");
            body.classList.remove('not-loaded'); // Hi·ªÉn th·ªã to√†n b·ªô n·ªôi dung

            // ƒê·ªìng b·ªô thanh slider v·ªõi √¢m l∆∞·ª£ng 20%
            if (volumeSlider) {
                volumeSlider.value = 20; // ƒê·∫∑t gi√° tr·ªã slider v·ªÅ 20 (t∆∞∆°ng ·ª©ng 20%)
            }

            // ƒê·∫£m b·∫£o kh√¥ng c√≥ tr·∫°ng th√°i mute ban ƒë·∫ßu
            if (volumeIcon) {
                volumeIcon.classList.remove('muted'); // X√≥a g·∫°ch ch√©o n·∫øu c√≥
            }

            // Kh·ªüi ƒë·ªông l·∫°i c√°c hi·ªáu ·ª©ng trong script.js (gi·∫£ ƒë·ªãnh)
            if (window.initFireworks) window.initFireworks(); // Kh·ªüi t·∫°o ph√°o hoa n·∫øu c√≥
            if (window.initFlowers) window.initFlowers(); // Kh·ªüi t·∫°o hoa n·∫øu c√≥
            if (window.initAnimations) window.initAnimations(); // Kh·ªüi t·∫°o animation text n·∫øu c√≥

            // Th√™m s·ª± ki·ªán ƒë·ªÉ chuy·ªÉn b√†i khi b√†i hi·ªán t·∫°i k·∫øt th√∫c
            setupAutoPlayNext(audio);
        }).catch(error => {
            console.log("Kh√¥ng th·ªÉ ph√°t nh·∫°c: ", error);
        });
    }
}

function setupAutoPlayNext(audio) {
    if (!audio) {
        console.error("Audio element is null in setupAutoPlayNext");
        return;
    }
    
    console.log("Setting up auto play next");
    
    // X√≥a t·∫•t c·∫£ event listener c≈© ƒë·ªÉ tr√°nh tr√πng l·∫∑p
    audio.removeEventListener('ended', handleAudioEnded);
    
    // Th√™m event listener m·ªõi
    audio.addEventListener('ended', handleAudioEnded);
    
    console.log("Auto play next setup completed");
}

function handleAudioEnded() {
    console.log("Audio ended event triggered");
    
    var audio = document.getElementById('background-music');
    if (!audio) {
        console.error("Audio element not found in handleAudioEnded");
        return;
    }
    
    // L·∫•y t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ link
    const links = document.querySelectorAll('.dropdown-content a');
    if (links.length === 0) {
        console.error("No music links found");
        return;
    }
    
    // T√¨m b√†i h√°t hi·ªán t·∫°i v√† b√†i ti·∫øp theo
    let currentIndex = -1;
    const currentSrc = audio.src;
    console.log("Current audio src:", currentSrc);
    
    // T√¨m b√†i h√°t hi·ªán t·∫°i b·∫±ng c√°ch ki·ªÉm tra t·∫•t c·∫£ c√°c URL
    for (let i = 0; i < links.length; i++) {
        const dataUrl = links[i].getAttribute('data-url');
        const fullUrl = new URL(dataUrl, window.location.origin).href;
        const relativePath = dataUrl.startsWith('/') ? dataUrl : '/' + dataUrl;
        
        console.log(`Checking ${i}: data-url=${dataUrl}, fullUrl=${fullUrl}`);
        
        // Ki·ªÉm tra nhi·ªÅu c√°ch kh√°c nhau
        if (currentSrc === fullUrl || 
            currentSrc.endsWith(dataUrl) || 
            currentSrc.endsWith(relativePath)) {
            currentIndex = i;
            console.log("Found match at index:", i);
            break;
        }
    }
    
    // N·∫øu kh√¥ng t√¨m th·∫•y, th·ª≠ c√°ch kh√°c
    if (currentIndex === -1) {
        console.log("No exact match found, using filename comparison");
        const currentFile = currentSrc.split('/').pop();
        for (let i = 0; i < links.length; i++) {
            const dataUrl = links[i].getAttribute('data-url');
            const dataFile = dataUrl.split('/').pop();
            if (currentFile === dataFile) {
                currentIndex = i;
                console.log("Found match by filename at index:", i);
                break;
            }
        }
    }
    
    // X√°c ƒë·ªãnh b√†i ti·∫øp theo
    let nextIndex;
    if (currentIndex === -1 || currentIndex >= links.length - 1) {
        // N·∫øu kh√¥ng t√¨m th·∫•y ho·∫∑c l√† b√†i cu·ªëi c√πng, quay l·∫°i b√†i ƒë·∫ßu ti√™n
        nextIndex = 0;
        console.log("Moving to first song (index 0)");
    } else {
        // Chuy·ªÉn sang b√†i ti·∫øp theo
        nextIndex = currentIndex + 1;
        console.log(`Moving to next song (index ${nextIndex})`);
    }
    
    // L·∫•y URL c·ªßa b√†i ti·∫øp theo
    const nextUrl = links[nextIndex].getAttribute('data-url');
    console.log("Next song URL:", nextUrl);
    
    // Chuy·ªÉn sang b√†i ti·∫øp theo
    changeMusic(nextUrl);
}

// H√†m x·ª≠ l√Ω √¢m l∆∞·ª£ng (g·ªôp toggleMute v√† adjustVolume, th√™m g·∫°ch ch√©o khi mute)
function handleVolume() {
    var audio = document.getElementById('background-music');
    var volumeSlider = document.getElementById('volume-slider');
    var volumeIcon = document.querySelector('.volume-icon');
    if (audio && volumeSlider && volumeIcon) {
        if (audio.muted) {
            audio.muted = false; // B·∫≠t ti·∫øng
            volumeIcon.classList.remove('muted'); // X√≥a g·∫°ch ch√©o
            volumeSlider.value = audio.volume * 100; // ƒê·ªìng b·ªô v·ªõi √¢m l∆∞·ª£ng hi·ªán t·∫°i
        } else {
            audio.muted = true; // T·∫Øt ti·∫øng
            volumeIcon.classList.add('muted'); // Th√™m g·∫°ch ch√©o
            volumeSlider.value = 0; // ƒê·∫∑t thanh k√©o v·ªÅ 0
        }
    }
}

// H√†m gi·∫£m √¢m l∆∞·ª£ng
function decreaseVolume() {
    var audio = document.getElementById('background-music');
    var volumeSlider = document.getElementById('volume-slider');
    var volumeIcon = document.querySelector('.volume-icon');
    if (audio && volumeSlider && volumeIcon) {
        if (audio.volume > 0.0) {
            audio.volume = Math.max(0.0, audio.volume - 0.1);
            volumeSlider.value = audio.volume * 100;
            audio.muted = (audio.volume === 0); // T·ª± ƒë·ªông t·∫Øt ti·∫øng n·∫øu √¢m l∆∞·ª£ng v·ªÅ 0
            if (audio.muted) {
                volumeIcon.classList.add('muted'); // Th√™m g·∫°ch ch√©o n·∫øu mute
            } else {
                volumeIcon.classList.remove('muted'); // X√≥a g·∫°ch ch√©o n·∫øu kh√¥ng mute
            }
        }
    }
}

// H√†m ƒëi·ªÅu ch·ªânh √¢m l∆∞·ª£ng t·ª´ thanh k√©o
function adjustVolume() {
    var audio = document.getElementById('background-music');
    var volumeSlider = document.getElementById('volume-slider');
    var volumeIcon = document.querySelector('.volume-icon');
    if (audio && volumeSlider && volumeIcon) {
        audio.volume = volumeSlider.value / 100;
        audio.muted = (audio.volume === 0);
        if (audio.muted) {
            volumeIcon.classList.add('muted'); // Th√™m g·∫°ch ch√©o n·∫øu mute
        } else {
            volumeIcon.classList.remove('muted'); // X√≥a g·∫°ch ch√©o n·∫øu kh√¥ng mute
        }
    }
}

// H√†m thay ƒë·ªïi b√†i h√°t khi ch·ªçn t·ª´ dropdown
function changeMusic(url) {
    console.log("Changing music to:", url);
    var audio = document.getElementById('background-music');
    if (!audio) {
        console.error("Audio element not found in changeMusic");
        return;
    }
    
    // ƒê·∫£m b·∫£o URL ƒë√∫ng format
    const formattedUrl = url.startsWith('/') ? url : '/' + url;
    console.log("Formatted URL:", formattedUrl);
    
    // D·ª´ng ph√°t hi·ªán t·∫°i n·∫øu ƒëang ph√°t
    audio.pause();
    
    // Thi·∫øt l·∫≠p source m·ªõi
    audio.src = formattedUrl;
    
    // Ph√°t nh·∫°c
    audio.load();
    const playPromise = audio.play();
    if (playPromise) {
        playPromise.then(() => {
            console.log("Playing new song successfully");
        }).catch(error => {
            console.error("Error playing new song:", error);
        });
    }
    
    // T√¥ s√°ng b√†i ƒëang ph√°t trong dropdown
    const links = document.querySelectorAll('.dropdown-content a');
    links.forEach(function(link) {
        const linkUrl = link.getAttribute('data-url');
        if (linkUrl === url || 
            ('/' + linkUrl === url) || 
            (linkUrl === '/' + url) || 
            (formattedUrl === '/' + linkUrl) || 
            (formattedUrl === linkUrl)) {
            link.style.backgroundColor = '#ddd';
        } else {
            link.style.backgroundColor = '';
        }
    });
    
    // ƒê·∫£m b·∫£o event listener cho b√†i ti·∫øp theo ƒë∆∞·ª£c thi·∫øt l·∫≠p
    setupAutoPlayNext(audio);
}